KtFile: file.kt
KtFile: main.kt
src\main.kt:150:13: error: unresolved reference: appendln
        out.appendln(" ".repeat(14) + category)
            ^
src\main.kt:163:21: error: unresolved reference: appendln
                out.appendln(count)
                    ^
src\main.kt:195:17: error: unresolved reference: appendln
            out.appendln(" ".repeat(2) + header)
                ^
src\main.kt:198:34: error: type inference failed: inline fun <K, V> Map<out K, V>.forEach(action: (Map.Entry<K, V>) -> Unit): Unit
cannot be applied to
receiver: Map<String, List<Component>>  arguments: ((Map.Entry<String, List<Component>>, ???) -> Unit)

        list.groupBy { it.name }.forEach { name, it ->
                                 ^
src\main.kt:198:42: error: type mismatch: inferred type is (Map.Entry<String, List<Component>>, ???) -> Unit but (Map.Entry<String, List<Component>>) -> Unit was expected
        list.groupBy { it.name }.forEach { name, it ->
                                         ^
src\main.kt:198:44: error: expected one parameter of type Map.Entry<String, List<Component>>
        list.groupBy { it.name }.forEach { name, it ->
                                           ^
src\main.kt:198:50: error: cannot infer a type for this parameter. Please specify it explicitly.
        list.groupBy { it.name }.forEach { name, it ->
                                                 ^
src\main.kt:199:29: error: unresolved reference. None of the following candidates is applicable because of receiver type mismatch: 
public fun CharSequence.padEnd(length: Int, padChar: Char = ...): CharSequence defined in kotlin.text
public fun String.padEnd(length: Int, padChar: Char = ...): String defined in kotlin.text
            out.append(name.padEnd(55))
                            ^
src\main.kt:200:17: error: unresolved reference: appendln
            out.appendln(it.size)
                ^
